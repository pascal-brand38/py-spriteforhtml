name: Python application

on: [push]

permissions:
  contents: read

jobs:
  build:

    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.12"]
        os: [
          "macos-latest",
          "ubuntu-latest",
          "windows-latest",
        ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest Pillow pylint

    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install optipng
    - name: Install Macos dependencies
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install optipng
    - name: Install Windows dependencies
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install optipng

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      # C0103: Variable name naming style
      # C0301: line too long
      # C0325: Unnecessary parens after 'if' keyword
      # R1705: Unnecessary "else" after "return"
      # W0718: Catching too general exception
      run: |
        pylint --indent-string='  ' --disable C0103,C0301,C0325,R1705,W0718 $(git ls-files '*.py')
    - name: Test with pytest
      run: |
        pytest tests/unit.py
    - name: Archive pytest results
      # run even if previous have failed
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-result-${{matrix.python-version}}-${{matrix.os}}
        path: /tmp/sprite.*
